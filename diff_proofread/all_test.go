package diff

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

var (
	o  = "随着她身上越来越香，我半夜听到爹娘说话：「我看珍儿这精华吃的也差不多了，可以巨棒取珠了。而我爸此时正站着我书桌前a滔滔不绝地讲述建筑行业多么有前途"
	m  = "随着她身上越来越香，我半夜听到爹娘说话：「我看珍儿这精华吃的也差不多了，可以取珠了。而我爸此时正站在我书桌前b滔滔不绝地讲述建筑行业多么有前途"
	o1 = "而我爸此时正站着我书桌前a滔滔不绝地讲述建筑行业多么有前途，坐办公室的设计工作多么适合女生，女生学工科又是多么没前途。最近几年拿不到项目了，才会经常着家，还带着杨阿姨回来。我直着拐着提醒过我妈注意杨阿姨和我爸的关系，她却说:"
	m1 = "而我爸此时正站在我书桌前b滔滔不绝地讲述建筑行业多么有前途，坐办公室的设计工作多么适合女生，女生学工科又是多么没前途。最近几年拿不到项目了，才会经常在家。还带着杨阿姨回来。我直接或者旁敲侧击地提醒过我妈注意杨阿姨和我爸的关系，她却说："
	o3 = "-我卧室窗户距离地面的距离，忙的热火朝天，爹娘知道后不但不怪她，还好吃好喝的供着她，一个劲的夸她说：「我们女儿真能干！」"
	m3 = "我卧室窗户距离地面的高度，忙的热火朝天，爹娘知道后不但不怪她，还好吃好喝地供着她，一个劲地夸她说：「我们女儿真能干！"
	o4 = "女士您好，身体不舒服吗？需不需要帮助？"
	m4 = "女士您好，身体不舒服吗？需要帮助吗？"
	o5 = "还笑眯眯的看着气得发抖的王婶说到：「你都这么老了，享用身体这么好的男人真是可惜。」"
	m5 = "还笑眯眯地看着气得发抖的王婶说道：「你都这么老了，享用身体这么好的男人真是可惜。」"
	o6 = "我是世间仅存的魅妖，自幼在修仙派门长大"
	m6 = "我是世间仅存的魅妖，自幼在修仙派门中长大"
	o7 = "从她脸上痴迷的表情痴迷的表情就能看出来，刚刚的那个男人没有让她满足。"
	m7 = "从她脸上痴迷的表情就能看出来，刚刚的那个男人没有让她满足。"
	o8 = "他是爹爹一手扶持起来的，对爹爹感情颇深，怎么都不愿意让爹爹就此离开朝堂，甚至亲临府中探病，态度谦卑地一力规劝爹爹多留些时日。"
	m9 = "他是爹爹一手扶持起来的，对爹爹感情颇深，怎么都不愿意让爹爹就此离开朝堂，甚至亲临府中探病，态度谦卑地一力劝说爹爹多留些时日。"
)

type TestCase struct {
	origin string
	modify string
	Expect []ProofreadResult
}

var testCases = []TestCase{
	{
		origin: "随着她身上越来越香，我半夜听到爹娘说话：「我看珍儿这精华吃的也差不多了，可以巨棒取珠了。而我爸此时正站着我书桌前a滔滔不绝地讲述建筑行业多么有前途",
		modify: "随着她身上越来越香，我半夜听到爹娘说话：「我看珍儿这精华吃的也差不多了，可以取珠了。而我爸此时正站在我书桌前b滔滔不绝地讲述建筑行业多么有前途",
		Expect: []ProofreadResult{},
	},
	{
		origin: "而我爸此时正站着我书桌前a滔滔不绝地讲述建筑行业多么有前途，坐办公室的设计工作多么适合女生，女生学工科又是多么没前途。最近几年拿不到项目了，才会经常着家，还带着杨阿姨回来。我直着拐着提醒过我妈注意杨阿姨和我爸的关系，她却说:",
		modify: "而我爸此时正站在我书桌前b滔滔不绝地讲述建筑行业多么有前途，坐办公室的设计工作多么适合女生，女生学工科又是多么没前途。最近几年拿不到项目了，才会经常在家。还带着杨阿姨回来。我直接或者旁敲侧击地提醒过我妈注意杨阿姨和我爸的关系，她却说：",
	},
	{
		origin: "-我卧室窗户距离地面的距离，忙的热火朝天，爹娘知道后不但不怪她，还好吃好喝的供着她，一个劲的夸她说：「我们女儿真能干！」",
		modify: "我卧室窗户距离地面的高度，忙的热火朝天，爹娘知道后不但不怪她，还好吃好喝地供着她，一个劲地夸她说：「我们女儿真能干！",
	},
	{
		origin: "女士您好，身体不舒服吗？需不需要帮助？",
		modify: "女士您好，身体不舒服吗？需要帮助吗？",
	},
	{
		origin: "还笑眯眯的看着气得发抖的王婶说到：「你都这么老了，享用身体这么好的男人真是可惜。」",
		modify: "还笑眯眯地看着气得发抖的王婶说道：「你都这么老了，享用身体这么好的男人真是可惜。」",
	},
	{
		origin: "我是世间仅存的魅妖，自幼在修仙派门长大",
		modify: "我是世间仅存的魅妖，自幼在修仙派门中长大",
	},
	{
		origin: "从她脸上痴迷的表情痴迷的表情就能看出来，刚刚的那个男人没有让她满足。",
		modify: "从她脸上痴迷的表情就能看出来，刚刚的那个男人没有让她满足。",
	},
	// === case 7 start 同行有两个ai建议，但是第二次建议是在第一个AI结果的建议上改动的，非原文  -> v4 fix
	{
		origin: "他是爹爹一手扶持起来的，对爹爹感情颇深，怎么都不愿意让爹爹就此离开朝堂，甚至亲临府中探病，态度谦卑地一力规劝爹爹多留些时日。",
		modify: "他是爹爹一手扶持起来的，对爹爹感情颇深，怎么都不愿意让爹爹就此离开朝堂，甚至亲临府中探病，态度谦卑地一力劝说爹爹多留些时日。",
	},
	{
		origin: "而武松正在此时清理李二僧和王道人剩余的手下喽啰们。",
		modify: "而武松此时正在清理李二僧和王道人剩余的手下喽啰们。",
	},
	{
		origin: "我坐在凳子上，将死尸脸上的白布取下来。我是实习医生，在平时的见习中见过不少尸体，但这具尸体死状着实惨烈。",
		modify: "我坐在凳子上，将尸体脸上的白布取下来。我是实习医生，在平时的见习中见过不少尸体，但这具尸体死状着实惨烈。",
	},

	// === case 7 end
	// === case 8 start 标点符号被识别为词汇 -> v4 fix
	{
		origin: "明明跟张凌之是从小一起长大的好兄弟，十几年来人家一路飞升官拜内阁首辅，他却依旧只能在这小小的山沟里做个落魄的教书先生。",
		modify: "明明跟张凌之是从小一起长大的好兄弟，十几年来人家一路飞升，官拜内阁首辅，他却依旧只能在这小小的山沟里做个落魄的教书先生。",
	},
	// === case 8 end
	// === case 9 start 标点符号被识别为词汇 -> v4 fix
	{
		origin: "“西门大官人，西门大官人，你赶快醒一醒。”",
		modify: "「西门大官人，西门大官人，你赶快醒一醒。」",
	},
	// === case 9 end
	// === case 10 start 添加case
	{
		origin: "只见她一只手的食指压住伤口，中指间隔开五厘米按压住血管，另一只手",
		modify: "只见她一只手的食指压住伤口，中指间隔开五厘米按压住血管，另一只手。",
	},
	// === case 10 end

}

func TestProofReadText(t *testing.T) {
	for i, testCase := range testCases {
		result := ProofReadTextV4(testCase.origin, testCase.modify)
		assert.True(t, equalResult(result, testCase.Expect), "Test case %d failed", i)
	}

}

func TestProofReadTextV2(t *testing.T) {
	ProofReadTextV2(testCases[3].origin, testCases[3].modify)
	print(1)
}

func TestProofReadTextV3(t *testing.T) {
	ProofReadTextV3(testCases[5].origin, testCases[5].modify)
	print(1)
}

func TestProofReadTextV4(t *testing.T) {
	ProofReadTextV4(testCases[9].origin, testCases[9].modify)
	print(1)
}

func TestProofReadTextV5(t *testing.T) {
	ProofReadTextV5(testCases[12].origin, testCases[12].modify)
	print(1)
}
